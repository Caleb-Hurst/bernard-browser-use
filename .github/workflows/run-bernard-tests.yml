name: Run Bernard Tests for Issues

on:
  workflow_dispatch:

jobs:
  run-bernard-tests:
    runs-on: ubuntu-latest
    env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -e .[video]
          pip install gh

      - name: Find issues with needs-test label
        id: find_issues
        run: |
          gh issue list --label needs-test --state open --json number,title,body > issues.json



      - name: Run Bernard QA Agent for each issue and comment artifact instructions
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          source venv/bin/activate
          cat issues.json | jq -c '.[]' | while read issue; do
            desc=$(echo "$issue" | jq -r '.body')
            num=$(echo "$issue" | jq -r '.number')
            # Run the agent with the issue description as the task
            python run_bernard_qa_agent.py "$desc"
            # Move the video(s) to a unique folder per issue
            mkdir -p artifacts/issue-$num
            cp -r tmp/recordings/* artifacts/issue-$num/ || true
            # Comment on the issue with artifact instructions
            gh issue comment $num --body "âœ… Test run complete!\n\nYou can download the video artifact for this test from the Actions run: https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} (see 'bernard-videos' artifact, issue-$num folder)."
          done

      - name: Upload video artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bernard-videos
          path: artifacts/yes

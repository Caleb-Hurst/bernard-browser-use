name: Summarize Issue for Testing When Labeled "needs-test"

on:
  issues:
    types: [labeled]

jobs:
  summarize-for-testing:
    if: github.event.label.name == 'needs-test'
    runs-on: ubuntu-latest
    steps:
      - name: Get Issue Info
        id: get-issue
        run: |
          echo "title<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Summarize with LLM
        id: summarize
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          PROMPT="Summarize the following GitHub issue for testing, and generate concise, bullet-pointed test instructions suitable for browser agent testing.\nTitle: ${{ steps.get-issue.outputs.title }}\nDescription: ${{ steps.get-issue.outputs.body }}"
          RESPONSE=$(curl -sS https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model":"gpt-4o",
              "messages":[{"role":"user","content":"'"$PROMPT"'"}],
              "max_tokens":300
            }')
          INSTRUCTIONS=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
          echo "instructions<<EOF" >> $GITHUB_OUTPUT
          echo "$INSTRUCTIONS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment with Test Summary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INSTRUCTIONS: ${{ steps.summarize.outputs.instructions }}
        run: |
          COMMENT="**BROWSER AGENT TESTING INSTRUCTIONS**\n\n$INSTRUCTIONS"
          ISSUE_NUMBER=${{ github.event.issue.number }}
          REPO=${{ github.repository }}
          curl -sSL -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$(jq -nc --arg body "$COMMENT" '{body: $body}')" \
            "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"

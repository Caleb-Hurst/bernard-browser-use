name: Summarize Issue and Linked PRs in Project Review

on:
  schedule:
    - cron: '* * * * *' # every minute; GitHub may delay runs

jobs:
  summarize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: read
    steps:
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find issues in Review status
        env:
          GH_TOKEN: ${{ secrets.BERNARD_BROWSER_AGENT_SUMMARY }}
        run: |
          PROJECT_ID="PVT_kwHOBtn0hM4BEg5v"
          STATUS_FIELD_ID="PVTSSF_lAHOBtn0hM4BEg5vzg2Hmgo"
          REVIEW_OPTION_ID="df73e18b"

          echo "---- Running GraphQL query to fetch Project items ----"
          gh api graphql -f query='
            query {
              node(id: "'$PROJECT_ID'") {
                ... on ProjectV2 {
                  items(first: 100) {
                    nodes {
                      content {
                        ... on Issue { number }
                      }
                      fieldValues(first: 20) {
                        nodes {
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            field {
                              ... on ProjectV2Field {
                                id
                              }
                            }
                            optionId
                          }
                          ... on ProjectV2ItemFieldTextValue { __typename }
                          ... on ProjectV2ItemFieldNumberValue { __typename }
                          ... on ProjectV2ItemFieldDateValue { __typename }
                          ... on ProjectV2ItemFieldIterationValue { __typename }
                          ... on ProjectV2ItemFieldRepositoryValue { __typename }
                          ... on ProjectV2ItemFieldUserValue { __typename }
                          ... on ProjectV2ItemFieldLabelValue { __typename }
                          ... on ProjectV2ItemFieldMilestoneValue { __typename }
                          ... on ProjectV2ItemFieldPullRequestValue { __typename }
                          ... on ProjectV2ItemFieldReviewerValue { __typename }
                        }
                      }
                    }
                  }
                }
              }
            }
          ' > items.json

          echo "---- Contents of items.json ----"
          cat items.json

          echo "---- Extracting issue numbers in Review status ----"
          ISSUE_NUMBERS=$(jq -r --arg REVIEW_OPTION_ID "$REVIEW_OPTION_ID" '
            .data.node.items.nodes[]
            | select(.fieldValues.nodes[]?
                | select(.optionId == $REVIEW_OPTION_ID))
            | .content.number
          ' items.json | xargs)

          echo "Extracted ISSUE_NUMBERS: '$ISSUE_NUMBERS'"

          echo "ISSUE_NUMBERS=$ISSUE_NUMBERS" >> $GITHUB_ENV

      - name: Summarize with Copilot
        if: env.ISSUE_NUMBERS != ''
        env:
          GH_TOKEN: ${{ secrets.BERNARD_BROWSER_AGENT_SUMMARY }}
        run: |
          REPO="bernardhealth/bernard-browser-use"
          echo "Starting Copilot summarization for ISSUES: $ISSUE_NUMBERS"
          for ISSUE_NUMBER in $ISSUE_NUMBERS; do
            echo "Processing issue #$ISSUE_NUMBER"
            LABELS=$(gh issue view "$ISSUE_NUMBER" --repo "$REPO" --json labels --jq '.labels[].name')
            echo "Labels for issue #$ISSUE_NUMBER: $LABELS"
            if echo "$LABELS" | grep -q '^copilot-reviewed$'; then
              echo "Issue #$ISSUE_NUMBER already summarized, skipping."
              continue
            fi
            PRS=$(gh pr list --repo "$REPO" --search "#$ISSUE_NUMBER" --json number --jq '.[].number')
            echo "Linked PRs for issue #$ISSUE_NUMBER: $PRS"
            PR_URLS=""
            for PR in $PRS; do
              PR_URLS="$PR_URLS https://github.com/$REPO/pull/$PR"
            done
            PROMPT="Summarize issue #$ISSUE_NUMBER and the following linked pull requests: $PR_URLS. For each PR, summarize the main code changes and provide a test plan describing how to verify the implementation is correct."
            echo "Prompt for Copilot:\n$PROMPT"
            gh copilot agent-task \
              --repo "$REPO" \
              --issue "$ISSUE_NUMBER" \
              --prompt "$PROMPT" \
              --post-comment
            echo "Adding 'copilot-reviewed' label to issue #$ISSUE_NUMBER"
            gh issue edit "$ISSUE_NUMBER" --repo "$REPO" --add-label "copilot-reviewed"
          done
